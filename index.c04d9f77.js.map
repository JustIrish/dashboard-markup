{"mappings":"mEAAAA,EAAiBC,KAAKC,MAAM,8sECE5B,IAAMC,EAAQC,SAASC,cAAc,UAE/BC,EAASC,EAAAP,GAAKQ,QAClB,SAACC,EAAGC,G,IAAIC,EAAID,EAAJC,KAAMC,EAAOF,EAAPE,QAASC,EAAKH,EAALG,MAAOC,EAAKJ,EAALI,MAAOC,EAAOL,EAAPK,QACnC,OADkDL,EAANM,OAiBxCP,EACA,8DAGUQ,OADAN,EAAK,2BAELM,OADAL,EAAQ,2BAERK,OADAJ,EAAM,2BAENI,OADAH,EAAM,2BACEG,OAARF,EAAQ,6GArBlBN,EACA,8DAGUQ,OADAN,EAAK,2BAELM,OADAL,EAAQ,2BAERK,OADAJ,EAAM,2BAENI,OADAH,EAAM,2BACEG,OAARF,EAAQ,yGAqBvB,+PAYHZ,EAAMe,mBAAmB,YAAaZ,G","sources":["src/data.json","src/index.js"],"sourcesContent":["[\n  {\n    \"name\": \"Jane Cooper\",\n    \"company\": \"Microsoft\",\n    \"phone\": \"(225) 555-0118\",\n    \"email\": \"jane@microsoft.com\",\n    \"country\": \"United States\",\n    \"status\": true\n  },\n  {\n    \"name\": \"Floyd Miles\",\n    \"company\": \"Yahoo\",\n    \"phone\": \"(205) 555-0100\",\n    \"email\": \"floyd@yahoo.com\",\n    \"country\": \"Kiribati\",\n    \"status\": false\n  },\n  {\n    \"name\": \"Ronald Richards\",\n    \"company\": \"Adobe\",\n    \"phone\": \"(302) 555-0107\",\n    \"email\": \"ronald@adobe.com\",\n    \"country\": \"Israel\",\n    \"status\": false\n  },\n  {\n    \"name\": \"Marvin McKinney\",\n    \"company\": \"Tesla\",\n    \"phone\": \"(252) 555-0126\",\n    \"email\": \"marvin@tesla.com\",\n    \"country\": \"Iran\",\n    \"status\": true\n  },\n  {\n    \"name\": \"Jerome Bell\",\n    \"company\": \"Google\",\n    \"phone\": \"(629) 555-0129\",\n    \"email\": \"jerome@google.com\",\n    \"country\": \"Réunion\",\n    \"status\": true\n  },\n  {\n    \"name\": \"Kathryn Murphy\",\n    \"company\": \"Microsoft\",\n    \"phone\": \"(406) 555-0120\",\n    \"email\": \"kathryn@microsoft.com\",\n    \"country\": \"Curaçao\",\n    \"status\": true\n  },\n  {\n    \"name\": \"Jacob Jones\",\n    \"company\": \"Yahoo\",\n    \"phone\": \"(208) 555-0112\",\n    \"email\": \"jacob@yahoo.com\",\n    \"country\": \"Brazil\",\n    \"status\": true\n  },\n  {\n    \"name\": \"Kristin Watson\",\n    \"company\": \"Facebook\",\n    \"phone\": \"(704) 555-0127\",\n    \"email\": \"kristin@facebook.com\",\n    \"country\": \"Åland Islands\",\n    \"status\": false\n  },\n  {\n    \"name\": \"Chaim Lewis\",\n    \"company\": \"Microsoft\",\n    \"phone\": \"(294) 840-6685\",\n    \"email\": \"lewis@microsoft.com\",\n    \"country\": \"United States\",\n    \"status\": true\n  },\n  {\n    \"name\": \"Kennedy Lane\",\n    \"company\": \"Yahoo\",\n    \"phone\": \"(542) 451-7038\",\n    \"email\": \"kennedy@yahoo.com\",\n    \"country\": \"Kiribati\",\n    \"status\": false\n  },\n  {\n    \"name\": \"Wylie Pope\",\n    \"company\": \"Tesla\",\n    \"phone\": \"(692) 802-2949\",\n    \"email\": \"wylie@tesla.com\",\n    \"country\": \"Belgium\",\n    \"status\": true\n  },\n  {\n    \"name\": \"Cyrus Jackson\",\n    \"company\": \"Google\",\n    \"phone\": \"(501) 472-5218\",\n    \"email\": \"cyrus@google.com\",\n    \"country\": \"Argentina\",\n    \"status\": true\n  },\n  {\n    \"name\": \"Abbot Franks\",\n    \"company\": \"Google\",\n    \"phone\": \"(186) 568-3720\",\n    \"email\": \"abbot@google.com\",\n    \"country\": \"Germany\",\n    \"status\": true\n  },\n  {\n    \"name\": \"Reuben Henry\",\n    \"company\": \"Microsoft\",\n    \"phone\": \"(715) 598-5792\",\n    \"email\": \"reuben@microsoft.com\",\n    \"country\": \"Greece\",\n    \"status\": true\n  },\n  {\n    \"name\": \"Simon Morton\",\n    \"company\": \"Yahoo\",\n    \"phone\": \"(233) 738-2360\",\n    \"email\": \"simon@yahoo.com\",\n    \"country\": \"Brazil\",\n    \"status\": true\n  },\n  {\n    \"name\": \"Thomas Lucas\",\n    \"company\": \"Facebook\",\n    \"phone\": \"(704) 398-7993\",\n    \"email\": \"kristin@facebook.com\",\n    \"country\": \"Canada\",\n    \"status\": false\n  },\n  {\n    \"name\": \"Alec Howard\",\n    \"company\": \"Microsoft\",\n    \"phone\": \"(748) 206-2688\",\n    \"email\": \"alec@microsoft.com\",\n    \"country\": \"Georgia\",\n    \"status\": true\n  }\n]\n","import data from './data.json';\n\nconst table = document.querySelector('.table');\n\nconst markup = data.reduce(\n  (acc, { name, company, phone, email, country, status }) => {\n    if (!status) {\n      return (\n        acc +\n        `<tbody class=\"table__body\">\n        <tr>\n            <td>${name}</td>\n            <td>${company}</td>\n            <td>${phone}</td>\n            <td>${email}</td>\n            <td>${country}</td>\n            <td><span class=\"table__data\">Inactive</span></td>\n        </tr>\n     </tbody>`\n      );\n    } else {\n      return (\n        acc +\n        `<tbody class=\"table__body\">\n        <tr>\n            <td>${name}</td>\n            <td>${company}</td>\n            <td>${phone}</td>\n            <td>${email}</td>\n            <td>${country}</td>\n            <td><span class=\"table__data--active\">Active</span></td>\n        </tr>\n     </tbody>`\n      );\n    }\n  },\n  ` <thead class=\"table__header\">\n        <tr>\n          <th>Customer Name</th>\n          <th>Company</th>\n          <th>Phone Number</th>\n          <th>Email</th>\n          <th>Country</th>\n          <th>Status</th>\n        </tr>\n      </thead>`\n);\n\ntable.insertAdjacentHTML('beforeend', markup);\n"],"names":["$8e9a44893dbf8eec$exports","JSON","parse","$b8f9b7833fa37166$var$table","document","querySelector","$b8f9b7833fa37166$var$markup","$parcel$interopDefault","reduce","acc","param","name","company","phone","email","country","status","concat","insertAdjacentHTML"],"version":3,"file":"index.c04d9f77.js.map"}